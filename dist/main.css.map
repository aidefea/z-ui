{"version":3,"file":"main.css","mappings":"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","sources":["webpack://zYGUtils/./packages/toast/index.vue","webpack://zYGUtils/./packages/button/index.vue","webpack://zYGUtils/./packages/popup/index.vue","webpack://zYGUtils/./packages/input/index.vue"],"sourcesContent":["<template>\r\n  <div\r\n    v-if=\"visible\"\r\n    :class=\"[\r\n      'z-toast',\r\n      `z-toast--${type}`,\r\n      {\r\n        'z-toast-closable': closable,\r\n      },\r\n    ]\"\r\n    @click=\"handleClick\"\r\n  >\r\n    <span class=\"z-toast-message\">{{ message }}</span>\r\n    <button v-if=\"closable\" class=\"z-toast-close\" @click=\"closeToast\"></button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted } from \"vue\";\r\n\r\nexport default {\r\n  name: \"Toast\",\r\n  props: {\r\n    message: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    duration: {\r\n      type: Number,\r\n      default: 3000, // 默认3秒后消失\r\n    },\r\n    type: {\r\n      type: String,\r\n      default: \"info\", // 默认类型为信息\r\n    },\r\n    closable: {\r\n      type: Boolean,\r\n      default: true, // 默认有关闭按钮\r\n    },\r\n    onClose: {\r\n      type: Function,\r\n      default: () => {},\r\n    },\r\n  },\r\n  setup(props) {\r\n    const visible = ref(false); // 控制 Toast 显示与否\r\n\r\n    // 显示 Toast\r\n    const showToast = () => {\r\n      visible.value = true;\r\n    };\r\n\r\n    // 关闭 Toast\r\n    const closeToast = () => {\r\n      visible.value = false;\r\n      props.onClose();\r\n    };\r\n\r\n    // 处理点击事件\r\n    const handleClick = () => {\r\n      if (props.closable) {\r\n        closeToast();\r\n      }\r\n    };\r\n\r\n    // 在组件挂载后显示 Toast\r\n    onMounted(() => {\r\n      showToast();\r\n      if (props.duration > 0) {\r\n        setTimeout(closeToast, props.duration);\r\n      }\r\n    });\r\n\r\n    // 在组件卸载时调用 onClose\r\n    onUnmounted(() => {\r\n      props.onClose();\r\n    });\r\n\r\n    return {\r\n      visible,\r\n      handleClick,\r\n      closeToast,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.z-toast {\r\n  position: fixed;\r\n  top: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 1000;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.z-toast-message {\r\n  margin-right: 10px;\r\n}\r\n\r\n.z-toast-close {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  cursor: pointer;\r\n  width: 15px;\r\n  height: 15px;\r\n  position: relative;\r\n}\r\n\r\n.z-toast-close::before,\r\n.z-toast-close::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  width: 15px;\r\n  height: 2px;\r\n  background-color: white;\r\n  top: 50%;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.z-toast-close::before {\r\n  transform: translateY(-50%) rotate(45deg);\r\n}\r\n\r\n.z-toast-close::after {\r\n  transform: translateY(-50%) rotate(-45deg);\r\n}\r\n\r\n.z-toast--info {\r\n  background-color: rgba(76, 175, 80, 0.7);\r\n}\r\n\r\n.z-toast--success {\r\n  background-color: rgba(38, 166, 91, 0.7);\r\n}\r\n\r\n.z-toast--warning {\r\n  background-color: rgba(255, 193, 7, 0.7);\r\n}\r\n\r\n.z-toast--error {\r\n  background-color: rgba(244, 67, 54, 0.7);\r\n}\r\n\r\n.z-toast-closable {\r\n  padding-right: 25px;\r\n}\r\n</style>\r\n","<template>\r\n  <button\r\n    :class=\"[\r\n      'z-button',\r\n      `z-button--${props.type}`,\r\n      `z-button--${props.size}`,\r\n      {\r\n        'z-is-disabled': props.disabled,\r\n        'z-is-loading': props.loading,\r\n        'z-is-plain': props.plain,\r\n        'z-is-round': props.round,\r\n        'z-is-circle': props.circle,\r\n      },\r\n    ]\"\r\n    v-bind=\"$attrs\"\r\n    :disabled=\"disabled || loading\"\r\n    :type=\"nativeType\"\r\n    @click=\"handleClick\"\r\n  >\r\n    <span>\r\n      <i v-if=\"loading\" class=\"z-button-loading\"></i>\r\n      <el-icon v-else-if=\"icon || $slots.icon\">\r\n        <component :is=\"icon\" v-if=\"icon\" />\r\n        <slot v-else name=\"icon\" />\r\n      </el-icon>\r\n      <span v-if=\"$slots.default\" :class=\"{ 'z-button-text': shouldAddSpace }\">\r\n        <slot />\r\n      </span>\r\n    </span>\r\n  </button>\r\n</template>\r\n<script setup>\r\nimport { useSlots, defineProps, defineEmits, computed } from \"vue\";\r\n\r\nconst slots = useSlots();\r\nconst emit = defineEmits([\"click\"]);\r\n\r\nconst props = defineProps({\r\n  type: {\r\n    type: String,\r\n    default: \"default\",\r\n    validator: (value) => {\r\n      return [\r\n        \"default\",\r\n        \"primary\",\r\n        \"success\",\r\n        \"warning\",\r\n        \"danger\",\r\n        \"info\",\r\n        \"text\",\r\n      ].includes(value);\r\n    },\r\n  },\r\n  size: {\r\n    type: String,\r\n    default: \"medium\",\r\n    validator: (value) => {\r\n      return [\"medium\", \"small\", \"mini\"].includes(value);\r\n    },\r\n  },\r\n  nativeType: {\r\n    type: String,\r\n    default: \"button\",\r\n    validator: (value) => {\r\n      return [\"button\", \"submit\", \"reset\"].includes(value);\r\n    },\r\n  },\r\n  loading: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  plain: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  round: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  circle: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  icon: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n});\r\n\r\nconst shouldAddSpace = computed(() => {\r\n  return props.icon || slots.icon || props.loading;\r\n});\r\n\r\nconst handleClick = () => {\r\n  if (!props.disabled && !props.loading) {\r\n    emit(\"click\");\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.z-button {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  line-height: 1;\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n  background: #fff;\r\n  border: 1px solid #dcdfe6;\r\n  color: #606266;\r\n  text-align: center;\r\n  box-sizing: border-box;\r\n  outline: none;\r\n  margin: 0;\r\n  transition: 0.1s;\r\n  font-weight: 500;\r\n  padding: 12px 20px;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  position: relative;\r\n}\r\n\r\n.z-button:hover {\r\n  color: #409eff;\r\n  border-color: #c6e2ff;\r\n  background-color: #ecf5ff;\r\n}\r\n\r\n.z-button:active {\r\n  color: #3a8ee6;\r\n  border-color: #3a8ee6;\r\n}\r\n\r\n/* 按钮类型 */\r\n.z-button--primary {\r\n  color: #fff;\r\n  background-color: #409eff;\r\n  border-color: #409eff;\r\n}\r\n\r\n.z-button--primary:hover {\r\n  background: #66b1ff;\r\n  border-color: #66b1ff;\r\n}\r\n\r\n.z-button--success {\r\n  color: #fff;\r\n  background-color: #67c23a;\r\n  border-color: #67c23a;\r\n}\r\n\r\n.z-button--warning {\r\n  color: #fff;\r\n  background-color: #e6a23c;\r\n  border-color: #e6a23c;\r\n}\r\n\r\n.z-button--danger {\r\n  color: #fff;\r\n  background-color: #f56c6c;\r\n  border-color: #f56c6c;\r\n}\r\n\r\n/* 朴素按钮样式 */\r\n.z-button.z-is-plain {\r\n  background: #fff;\r\n}\r\n\r\n.z-button.z-is-plain:hover {\r\n  background: #fff;\r\n}\r\n\r\n.z-button--primary.z-is-plain {\r\n  color: #409eff;\r\n  background: #ecf5ff;\r\n  border-color: #b3d8ff;\r\n}\r\n\r\n/* 禁用状态 */\r\n.z-button.z-is-disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n\r\n/* 加载动画 */\r\n.z-button-loading {\r\n  animation: rotating 1s linear infinite;\r\n  margin-right: 5px;\r\n  display: inline-block;\r\n  width: 14px;\r\n  height: 14px;\r\n  border: 2px solid #ccc;\r\n  border-top-color: transparent;\r\n  border-radius: 50%;\r\n}\r\n\r\n@keyframes rotating {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n/* 尺寸 */\r\n.z-button--medium {\r\n  padding: 10px 20px;\r\n  font-size: 14px;\r\n}\r\n\r\n.z-button--small {\r\n  padding: 9px 15px;\r\n  font-size: 12px;\r\n}\r\n\r\n.z-button--mini {\r\n  padding: 7px 15px;\r\n  font-size: 12px;\r\n}\r\n\r\n/* 圆角 */\r\n.z-button.z-is-round {\r\n  border-radius: 20px;\r\n}\r\n\r\n/* 圆形按钮 */\r\n.z-button.z-is-circle {\r\n  border-radius: 50%;\r\n  padding: 12px;\r\n}\r\n\r\n/* 文本间距 */\r\n.z-button-text {\r\n  margin-left: 5px;\r\n}\r\n</style>\r\n","<template>\r\n  <div\r\n    v-if=\"visible\"\r\n    class=\"z-overlay no-context-menu\"\r\n    @click.self=\"handleOverlayClick\"\r\n  >\r\n    <div\r\n      class=\"z-popup\"\r\n      :class=\"{ 'z-fullscreen': isFullscreen }\"\r\n      :style=\"{ width: width + 'px', height: height + 'px' }\"\r\n    >\r\n      <!-- 弹窗头部 -->\r\n      <div class=\"z-popup-header\">\r\n        <!-- 全屏按钮（根据配置显示） -->\r\n        <button\r\n          v-if=\"showFullscreenButton\"\r\n          class=\"z-fullscreen-btn\"\r\n          @click=\"toggleFullscreen\"\r\n        >\r\n          ⛶\r\n        </button>\r\n        <!-- 关闭按钮 -->\r\n        <button aria-label=\"Close\" class=\"z-close-btn\" @click=\"handleClose\">\r\n          ×\r\n        </button>\r\n      </div>\r\n      <!-- 弹窗内容 -->\r\n      <div class=\"z-popup-body\">\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"zpopup\",\r\n  props: {\r\n    visible: { type: Boolean, default: false },\r\n    width: { type: Number, default: 600 },\r\n    height: { type: Number, default: 400 },\r\n    showFullscreenButton: { type: Boolean, default: true },\r\n  },\r\n  data() {\r\n    return { isFullscreen: false };\r\n  },\r\n  methods: {\r\n    // 点击遮罩层关闭\r\n    handleOverlayClick() {\r\n      this.closePopup();\r\n    },\r\n    // 关闭按钮点击\r\n    handleClose() {\r\n      this.closePopup();\r\n    },\r\n    // 关闭弹窗逻辑\r\n    closePopup() {\r\n      this.$emit(\"update:visible\", false);\r\n      this.isFullscreen = false; // 关闭时重置全屏状态\r\n    },\r\n    // 全屏切换\r\n    toggleFullscreen() {\r\n      this.isFullscreen = !this.isFullscreen;\r\n    },\r\n    // ESC 键关闭监听\r\n    handleKeydown(e) {\r\n      if (e.key === \"Escape\" && this.visible) this.closePopup();\r\n    },\r\n  },\r\n  watch: {\r\n    // 禁止背景滚动\r\n    visible(val) {\r\n      document.body.style.overflow = val ? \"hidden\" : \"\";\r\n    },\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"keydown\", this.handleKeydown);\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener(\"keydown\", this.handleKeydown);\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.z-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.z-popup {\r\n  position: relative;\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  overflow: auto;\r\n  box-sizing: border-box;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.z-popup-header {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n}\r\n\r\n.z-close-btn {\r\n  width: 23px;\r\n  height: 23px;\r\n  border-radius: 50%;\r\n  background-color: #00000042;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background 0.2s;\r\n}\r\n\r\n.z-close-btn:hover {\r\n  background-color: #00000060;\r\n}\r\n\r\n/* 全屏模式样式 */\r\n.z-popup.z-fullscreen {\r\n  width: 100vw !important;\r\n  height: 100vh !important;\r\n  max-width: none;\r\n  border-radius: 0;\r\n}\r\n\r\n.z-popup-body {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin-top: 10px; /* 防止内容被关闭按钮遮挡 */\r\n}\r\n\r\n/* 悬停效果 */\r\n.z-close-btn:hover,\r\n.z-fullscreen-btn:hover {\r\n  background-color: #00000060;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"redred\">\r\n    <div>我是一个帅哥</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"zinput\",\r\n  data() {\r\n    return {};\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.redred {\r\n  color: red;\r\n  background-color: blue;\r\n  border: 1px red solid;\r\n}\r\n</style>\r\n"],"names":[],"sourceRoot":""}